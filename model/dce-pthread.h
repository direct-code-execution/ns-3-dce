
                    /* DO NOT MODIFY - GENERATED BY script */
                    #ifndef DCE_HEADER_PTHREAD_H
                    #define DCE_HEADER_PTHREAD_H
                    // TODO add extern "C" ?
                    #include <pthread.h>
// TODO temporary hack
#define __restrict__

#ifdef __cplusplus
extern "C" {
#endif

                    extern int dce_pthread_create (__restrict__ ::pthread_t *,__restrict__ ::pthread_attr_t const *,void * (*)( void * ) ,__restrict__ void *);

extern void dce_pthread_exit (void *);

extern pthread_t dce_pthread_self ();

extern int dce_pthread_once (pthread_once_t *,void (*)(  ) );

extern void * dce_pthread_getspecific (pthread_key_t);

extern int dce_pthread_setspecific (pthread_key_t,void const *);

extern int dce_pthread_key_create (pthread_key_t *,void (*)( void * ) );

extern int dce_pthread_key_delete (pthread_key_t);

extern int dce_pthread_mutex_destroy (pthread_mutex_t *);

extern int dce_pthread_mutex_init (pthread_mutex_t *,pthread_mutexattr_t const *);

extern int dce_pthread_mutex_trylock (pthread_mutex_t *);

extern int dce_pthread_mutexattr_init (pthread_mutexattr_t *);

extern int dce_pthread_mutexattr_destroy (pthread_mutexattr_t *);

extern int dce_pthread_mutexattr_settype (pthread_mutexattr_t *,int);

extern int dce_pthread_cancel (pthread_t);

extern int dce_pthread_join (pthread_t,void * *);

extern int dce_pthread_detach (pthread_t);

extern int dce_pthread_cond_destroy (pthread_cond_t *);

extern int dce_pthread_cond_init (__restrict__ ::pthread_cond_t *,__restrict__ ::pthread_condattr_t const *);

extern int dce_pthread_cond_broadcast (pthread_cond_t *);

extern int dce_pthread_cond_signal (pthread_cond_t *);

extern int dce_pthread_condattr_destroy (pthread_condattr_t *);

extern int dce_pthread_condattr_init (pthread_condattr_t *);














                    #ifdef __cplusplus
}
#endif
                    #endif
                    